N=2000
data = datacreator(N)
#######################################
burnin <- 1000
nmc    <- 5000
thin <- 1
########################################
#method 1 (horseshoe prior)
M1 = logiths(z=data$pop$y1,X=cbind(rep(1,N),data$pop$x,log(data$pop$x)),
method.tau="halfCauchy",
burn = burnin,
nmc=nmc,
thin=1)
#method 2 (normal prior)
M2 = MCMClogit(y1~x+log(x),data=data$pop,mcmc=nmc,b0=.1,B0=.1,
marginal.likelihood = "Laplace")
m3 = logit.spike(y1~x+log(x),niter=nmc,data=data$pop)
cloneddata = data$pop
cloneddata$y1 = as.factor(cloneddata$y1)
m4 = bayesreg(y1~x+log(x),data=cloneddata,model="binomial",prior="horseshoe",
n.samples=5000)
#############################################
#method 1
M1$BetaMedian
#method 2
colMeans(M2)
#method 3
colMeans(m3$beta)
#method 4
summary(m4)
library(horseshoenlm)
library(MCMCpack)
library(BoomSpikeSlab)
library(bayesreg)
# True model is y ~log(X)
datacreator <- function(N){
#Create Dataset
X1 = rgamma(N,1,1)
X = cbind(rep(1,N),log(X1))
sigmoid <- function(x){
1/(1+exp(-x))
}
J=4 #number of lists
mybeta = matrix(c(-2,-1,
-2,1,
-2,-1,
-2,1),nrow=J,byrow=TRUE)
myprobs = sigmoid(X%*%t(mybeta))
Y <- matrix(rep(NA,J*N),ncol=J)
for(j in 1:J){
Y[,j] = rbinom(n=N,size=1,prob=myprobs[,j])
}
mydata = data.frame(
"y"=Y,
"x"=X1
)
colnames(mydata) <- gsub("\\.","",colnames(mydata))
colnames(mydata) <- gsub("X","",colnames(mydata))
#Remove unobserved
myobserveddata = mydata[rowSums(mydata[,1:J])>0,]
result = list("pop"=mydata,"observed"=myobserveddata,"truebeta"=mybeta)
}
N=500
data = datacreator(N)
#######################################
burnin <- 1000
nmc    <- 5000
thin <- 1
########################################
#method 1 (horseshoe prior)
M1 = logiths(z=data$pop$y1,X=cbind(rep(1,N),data$pop$x,log(data$pop$x)),
method.tau="halfCauchy",
burn = burnin,
nmc=nmc,
thin=1)
#method 2 (normal prior)
M2 = MCMClogit(y1~x+log(x),data=data$pop,mcmc=nmc,b0=.1,B0=.1,
marginal.likelihood = "Laplace")
#method 3 (logit spike)
m3 = logit.spike(y1~x+log(x),niter=nmc,data=data$pop)
#method 4
cloneddata = data$pop
cloneddata$y1 = as.factor(cloneddata$y1)
m4 = bayesreg(y1~x+log(x),data=cloneddata,model="binomial",prior="horseshoe",
n.samples=5000)
#method 1
M1$BetaMedian
#method 2
colMeans(M2)
#method 3
colMeans(m3$beta)
#method 4
summary(m4)
#method 1 (horseshoe)
M1$BetaMedian
#method 2 (normal)
colMeans(M2)
#method 3 (spike)
colMeans(m3$beta)
#method 4 (horseshoe)
summary(m4)
?rcauchy
rcauchy(1)
?rinvgamma
1/rinvgamma(N,0.5,1)
rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
rcauchy(n,0,1)
rcauchy(N,0,1)
abs(rcauchy(N,0,1))
hist(abs(rcauchy(N,0,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(abs(rcauchy(N,0,1)))
hist(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1)))
hist(abs(rcauchy(N,0,1)))
hist(sqrt(abs(rcauchy(N,0,1))))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
##############
#Checking out the Half-Cauchy
N=10000
par(mfrow=c(2,1))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
N=10000
par(mfrow=c(1,2))
hist(sqrt(rinvgamma(N,0.5,1/rinvgamma(N,0.5,1))))
hist(abs(rcauchy(N,0,1)))
setwd("~/Indiana University Statistics Graduate Program/Dissertation/ClusterAnalysis/modelselclusteranalysis")
modselresultslist <- readRDS("~/Indiana University Statistics Graduate Program/Dissertation/ClusterAnalysis/modelselclusteranalysis/modselresultslist.RDS")
View(modselresultslist)
setwd("~/Indiana University Statistics Graduate Program/Dissertation/ClusterAnalysis/modelselclusteranalysis")
View(modselresultslist)
test=modselresultslist$Nhat1
plot(test)
rep(2000,1000)
rep(2000,1000),rep(200,1000),rep(500,1000)
c(rep(2000,1000),rep(200,1000),rep(500,1000))
TRUEN=c(rep(2000,1000),rep(200,1000),rep(500,1000))
sims=c(rep(10000,1000),rep(100000,1000),rep(10000,1000),rep(100000,1000),rep(10000,1000),rep(100000,1000))
modselresultslist$TRUEN=TRUEN
modselresultslist$sims=sims
saveRDS(modselresultslist,"modselresultslist.RDS")
which(modselresultslist$TRUEN==500)
which(modselresultslist$TRUEN==500 & modselresultslist$sims==10000)
modselresultslist$TRUEN==500 & modselresultslist$sims==10000
sims=c(rep(10000,500),rep(100000,500),rep(10000,500),rep(100000,500),rep(10000,500),rep(100000,500))
modselresultslist$sims=sims
saveRDS(modselresultslist,"modselresultslist.RDS")
modselresultslist <- readRDS("~/Indiana University Statistics Graduate Program/Dissertation/ClusterAnalysis/modelselclusteranalysis/modselresultslist.RDS")
readRDS("modselresultslist.RDS")
modselresultslist=readRDS("modselresultslist.RDS")
which(modselresultslist$TRUEN==500)
which(modselresultslist$TRUEN==500 & modselresultslist$sims==10000)
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 200
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 2000
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
TRUEN = 2000
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
TRUEN = 2000
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 2000
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 2000
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
TRUEN=c(rep(2000,1000),rep(200,1000),rep(500,1000))
sims=c(rep(100000,500),rep(10000,500),rep(10000,500),rep(100000,500),rep(10000,500),rep(100000,500))
modselresultslist <- readRDS("~/Indiana University Statistics Graduate Program/Dissertation/ClusterAnalysis/modelselclusteranalysis/modselresultslist.RDS")
modselresultslist$sims=sims
saveRDS(modselresultslist,"modselresultslist")
#Change which results you want here
TRUEN = 2000
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 2000
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 200
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 200
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
TRUEN = 500
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
#Change which results you want here
TRUEN = 500
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
saveRDS(modselresultslist,"modselresultslist")
saveRDS(modselresultslist,"modselresultslist")
saveRDS(modselresultslist,"modselresultslist.RDS")
modselresultslist=loadRDS("modselresultslist.RDS")
modselresultslist=readRDS("modselresultslist.RDS")
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices])
hist(modselresultslist$Nhat2[myindices])
hist(modselresultslist$Nhat3[myindices])
hist(modselresultslist$Nhat1[myindices]);quantile(mysimlist$Nhat1[myindices],c(0.025,0.5,0.975))
modselresultslist=readRDS("modselresultslist.RDS")
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
hist(modselresultslist$Nhat1[myindices]);quantile(modselresultslist$Nhat1[myindices],c(0.025,0.5,0.975))
hist(modselresultslist$Nhat2[myindices]);quantile(modselresultslist$Nhat2[myindices],c(0.025,0.5,0.975))
hist(modselresultslist$Nhat3[myindices]);quantile(modselresultslist$Nhat3[myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
TRUEN = 500
sims = 100000
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
#log vs reg
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
#log vs sqrt
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,3,myindices]);quantile(modselresultslist$logBF[1,3,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,3,myindices]);quantile(modselresultslist$logBFadj[1,3,myindices],c(0.025,0.5,0.975))
#sqrt vs reg
par(mfrow=c(2,1))
hist(modselresultslist$logBF[3,2,myindices]);quantile(modselresultslist$logBF[3,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[3,2,myindices]);quantile(modselresultslist$logBFadj[3,2,myindices],c(0.025,0.5,0.975))
plot(modselresultslist$logBF[1,2,],modselresultslist$logBFadj[1,2,])
abline(a=0,b=1)
#Analyze Log VS REG harmonic mean vs adjusted
par(mfrow=c(2,1))
#Analyze Log VS REG harmonic mean vs adjusted
par(mfrow=c(1,1))
plot(modselresultslist$logBF[1,2,],modselresultslist$logBFadj[1,2,])
abline(a=0,b=1)
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(1,1))
plot(modselresultslist$logBF[1,2,],modselresultslist$logBFadj[1,2,])
abline(a=0,b=1)
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(1,1))
plot(modselresultslist$logBF[1,2,],modselresultslist$logBFadj[1,2,])
abline(a=0,b=1)
#Change which results you want here
TRUEN = 500
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(3,1))
#Analyze Log VS REG harmonic mean vs adjusted
par(mfrow=c(1,1))
plot(modselresultslist$logBF[1,2,],modselresultslist$logBFadj[1,2,])
abline(a=0,b=1)
TRUEN = 500
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
plot(modselresultslist$logBF[1,2,myindices],modselresultslist$logBFadj[1,2,myindices])
#Analyze Log VS REG harmonic mean vs adjusted
par(mfrow=c(1,1))
plot(modselresultslist$logBF[1,2,myindices],modselresultslist$logBFadj[1,2,myindices])
abline(a=0,b=1)
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(1,1))
plot(modselresultslist$logBF[1,2,myindices],modselresultslist$logBFadj[1,2,myindices])
abline(a=0,b=1)
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
#log vs reg
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
#Change which results you want here
TRUEN = 500
sims = 100000
#log vs reg
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
#Change which results you want here
TRUEN = 500
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
#log vs reg
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.025,0.5,0.975))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.025,0.5,0.975))
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.1,0.5,0.9))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.1,0.5,0.9))
modselresultslist=readRDS("modselresultslist.RDS")
#Change which results you want here
TRUEN = 500
sims = 10000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
#log vs reg
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.1,0.5,0.9))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.1,0.5,0.9))
#Change which results you want here
TRUEN = 500
sims = 100000
myindices=which(modselresultslist$TRUEN==TRUEN & modselresultslist$sims==sims)
#log vs reg
par(mfrow=c(2,1))
hist(modselresultslist$logBF[1,2,myindices]);quantile(modselresultslist$logBF[1,2,myindices],c(0.1,0.5,0.9))
hist(modselresultslist$logBFadj[1,2,myindices]);quantile(modselresultslist$logBFadj[1,2,myindices],c(0.1,0.5,0.9))
setwd("~/Indiana University Statistics Graduate Program/Projects/superheroes")
library(BLRCR)
library(LCMCR)
library(dplyr)
################################################################
popsuperhero = readRDS("POPCharacterDataFrameVolumes.RDS")
View(popsuperhero)
superherodata = readRDS("CRcharacterdata.RDS")
#################################################################
#Clean the data up a bit by removing non-marvel/dc
popsuperhero=popsuperhero[popsuperhero$publisher_id==10|popsuperhero$publisher_id==31,]
popsuperhero=popsuperhero[-which(is.na(popsuperhero$freq)),]
superherodata= superherodata[superherodata$char_id %in% popsuperhero$char_id,]
#add log frequencies
superherodata$logfreq=log(superherodata$freq)
superherodata$logpopfreq=log(superherodata$popfreq)
popsuperhero$logfreq=log(popsuperhero$freq)
#add dummy variable for publisher
superherodata$pubdummy=as.integer(superherodata$publisher_id==10)
################################################################
#Some Exploratory Analysis
hist(popsuperhero$logfreq,ylim=c(0,9000))
hist(superherodata$logpopfreq,ylim=c(0,9000),col="blue",add=T)
misschars=popsuperhero[!(popsuperhero$char_id %in% superherodata$char_id),]
hist(misschars$logfreq,col="red",main="True Missing Character Log Frequencies")
#What is going on here?  Seems impossible for logfreq>4 to be missing.
#test=popsuperhero$char_id[which(popsuperhero$logfreq>6)]
#test1=superherodata$char_id[which(superherodata$logpopfreq>6)]
myformula1 = cbind(y1,y2,y3,y4,y5,y6)~logpopfreq
SPBLRCRboot1=SPBLRCRsolver2(myformula1,df=superherodata,Homega=2,
covmethod="bootstrap",
samples = 1000, burnin=100,thinning=1)
SPBLRCRboot1=SPBLRCRsolver2(myformula1,df=superherodata,Homega=2,
covmethod="bootstrap",
samples = 1000, burnin=100,thinning=1)
#Bayes Bootstrap method
SPBLRCRboot1=SPBLRCRsolver2(myformula2,df=superherodata,Homega=2,
covmethod="bootstrap",
samples = 1000, burnin=100,thinning=1)
SPBLRCRboot1=SPBLRCRsolver2(myformula2,df=superherodata,Homega=2,
covmethod="bootstrap",
samples = 1000, burnin=100,thinning=1)
SPBLRCRboot1=SPBLRCRsolver2(myformula2,df=superherodata,Homega=2,
covmethod="bootstrap",
samples = 1000, burnin=100,thinning=1)
myformula2 = cbind(y1,y2,y3,y4,y5,y6)~popfreq
SPBLRCRboot1=SPBLRCRsolver2(myformula2,df=superherodata,Homega=2,
covmethod="bootstrap",
samples = 1000, burnin=100,thinning=1)
